{"version":3,"sources":["mystyle.module.css","reportWebVitals.js","QuizSolutions.js","contexts/FavoritesContext.js","RenderAllQA.js","Navbar.js","App.js","FavoritesPage.js","index.js"],"names":["module","exports","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","QuizSolutions","props","viewQuizSolutionsHeading","currentItemIndex","combinedSelection","length","viewQuizSolutions","map","q","question","correct_answer","this","Component","FavoritesContext","createContext","FavoritesProvider","useState","favorites","setFavorites","Provider","value","children","RenderAllQA","useContext","addToFavorites","arrayOfQuestions","onClick","isItCorrect","className","styles","TFButton","renderAllQA","link","width","padding","margin","background","textDecoration","color","Navbar","to","style","activeStyle","App","componentDidMount","a","fetch","response1","json","data1","setState","fetchedArrayGK","results","loading","response2","data2","fetchedArrayScience","response3","data3","fetchedArrayMath","handleGeneralChange","event","generalQ","target","handleScienceChange","scienceQ","handleMathChange","mathQ","handleSubmit","preventDefault","formData","state","dataArray","submittedData","concat","parseInt","alert","testingSplicingStates","curtailedGK","slice","curtailedScience","curtailedMath","curtailQuestions","push","curtailedQuestionTogether","forEach","element","scrambledCurtailedSelection","questionsArray","prevState","generalQItems","scienceQItems","mathQItems","innerText","itemsCorrect","itemsIncorrect","scrambledcombinedArray","correctAnswer","seeSolutions","newlyLiked","bigblue","onSubmit","formstyle","type","onChange","FavoritesPage","fav","console","log","ReactDOM","render","exact","path","src","height","frameBorder","class","allowFullScreen","href","component","document","getElementById"],"mappings":"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","file":"static/js/main.55c04a51.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"bigblue\":\"mystyle_bigblue__22EM_\",\"TFButton\":\"mystyle_TFButton__utOoo\",\"formstyle\":\"mystyle_formstyle__WSGp_\"};","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {Component} from 'react'\n\nexport default class QuizSolutions extends Component{\nconstructor(props){\n  super(props)\n}\nviewQuizSolutionsHeading = () => {\n    if (this.props.currentItemIndex ===(this.props.combinedSelection.length) && this.props.currentItemIndex>0){\n      return (\n        <h1>\n          View Solutions\n          </h1>)}\n  }\n  viewQuizSolutions = () => {\n    if (this.props.currentItemIndex === this.props.combinedSelection.length){\n    return (\n      this.props.combinedSelection.map((q) =>\n        <div>\n          <p> {q.question} </p>\n          <p> {q.correct_answer} </p>\n        </div>))}}\n  \nrender() {\n  return(\n    <div>\n        <div>{this.viewQuizSolutionsHeading()}</div>\n        <div>{this.viewQuizSolutions()}</div>\n    </div>\n  )\n}}\n","import { useState, createContext } from \"react\";\n\nexport const FavoritesContext = createContext()\n\nexport const FavoritesProvider = (props) => {\n    const [favorites, setFavorites] = useState([])\n\n    return (\n        <FavoritesContext.Provider value = {[favorites, setFavorites]}> \n            {props.children}\n        </FavoritesContext.Provider>\n    )\n}\n\n","import {useContext} from 'react'\nimport styles from './mystyle.module.css'; \nimport {FavoritesContext} from './contexts/FavoritesContext'\n\nconst RenderAllQA = (props) => {\n    const [favorites, setFavorites] = useContext(FavoritesContext)\nconst addToFavorites = () => {\n    setFavorites([...favorites, props.arrayOfQuestions[props.currentItemIndex]])\n}\n\nconst renderAllQA = () => {\n    if (props.arrayOfQuestions !== 0 && props.currentItemIndex<props.combinedSelection.length) {\n      return (\n        <div>\n          <h1>Statement:</h1>\n          <h1>{props.arrayOfQuestions[props.currentItemIndex]}</h1>\n          <button onClick={props.isItCorrect} className={styles.TFButton}>   True   </button>\n\n          <button onClick={props.isItCorrect} className={styles.TFButton}>   False   </button>\n          <button onClick= {addToFavorites}>Save to Favorites</button>\n        </div>)\n    }\n  };\n\nreturn(\n<h1>{renderAllQA()}</h1>\n)\n}\n\nexport default RenderAllQA","import { NavLink } from 'react-router-dom';\nimport {Component} from 'react'\n\nconst link = {\n  width: '100px',\n  padding: '12px',\n  margin: '0 6px 6px',\n  background: 'blue',\n  textDecoration: 'none',\n  color: 'white',\n}\n\nexport default class Navbar extends Component {\n  render(){\n  return (\n    <div>\n      <NavLink to=\"/\" style= {link} activeStyle={{\n            background: 'darkblue'\n          }}>Home</NavLink>\n      <NavLink to=\"/playnow\" style= {link} activeStyle={{\n            background: 'darkblue'\n          }}>Play Now!</NavLink>\n      <NavLink to=\"/favorites\" style= {link} activeStyle={{\n            background: 'darkblue'\n          }}>See Favorites</NavLink>\n    </div>\n  )\n}}\n","import { Component } from \"react\";\nimport QuizSolutions from './QuizSolutions.js'\nimport RenderAllQA from \"./RenderAllQA.js\";\nimport Navbar from './Navbar.js';\nimport styles from './mystyle.module.css'; \n\nexport default class App extends Component {\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      fetchedArrayGK: [], //[], //Initial Fetched Arrays\n      fetchedArrayScience: [],\n      fetchedArrayMath: [],\n      generalQ: 0, //Input # of General Questions\n      scienceQ: 0, //Input # of General Questions\n      mathQ: 0, //Input # of General Questions\n      generalQItems: [],\n      mathQItems: [],\n      scienceQItems: [],\n      submittedData: [], //General Q#, Math Q#, Science Q#\n      combinedSelection: [], //[SplicedGeneral, SplicedMath, SplicedScience], but these are in one array\n      scrambledcombinedArray: [],\n      arrayOfQuestions: 0,\n      currentItemIndex: 0,\n      correctAnswer: \"---\",\n      itemsCorrect: 0,\n      itemsIncorrect: 0,\n      seeSolutions: 0,\n      newlyLiked: []\n    }\n  };\n\n  componentDidMount = async () => {\n    //For the first API\n    //Default URL\n    const url1 =\n      \"https://opentdb.com/api.php?amount=5&category=9&difficulty=medium&type=boolean\";\n    //Fetch Data\n    const response1 = await fetch(url1);\n    const data1 = await response1.json();\n    this.setState({ fetchedArrayGK: data1.results, loading: false });\n    //For the second API\n    const url2 = \"https://opentdb.com/api.php?amount=5&category=17&difficulty=medium&type=boolean\";\n    //Fetch Data\n    const response2 = await fetch(url2);\n    const data2 = await response2.json();\n    //Set State\n    this.setState({ fetchedArrayScience: data2.results, loading: false });\n    //For the third API\n    const url3 =\n      \"https://opentdb.com/api.php?amount=5&category=19&difficulty=medium&type=boolean\";\n    //Fetch Data\n    const response3 = await fetch(url3);\n    const data3 = await response3.json();\n    //Set State\n    this.setState({ fetchedArrayMath: data3.results, loading: false });\n  };\n\n  handleGeneralChange = (event) => {\n    this.setState({\n      generalQ: event.target.value\n    });\n  };\n\n  handleScienceChange = (event) => {\n    this.setState({\n      scienceQ: event.target.value\n    });\n  };\n\n  handleMathChange = (event) => {\n    this.setState({\n      mathQ: event.target.value\n    });\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    let formData = {\n      generalQ: this.state.generalQ,\n      scienceQ: this.state.scienceQ,\n      mathQ: this.state.mathQ\n    };\n    let dataArray = this.state.submittedData.concat(formData);\n    if ((parseInt(this.state.generalQ) + parseInt(this.state.scienceQ) + parseInt(this.state.mathQ))>5 || (parseInt(this.state.generalQ) + parseInt(this.state.scienceQ) + parseInt(this.state.mathQ))===0){\n      alert(\"Invalid selection. Please resubmit before proceeding.\")\n    }\n    this.setState({ submittedData: dataArray });}\n  \n\n  testingSplicingStates = () => {\n    const curtailedGK = this.state.fetchedArrayGK.slice(0, this.state.generalQ);\n    const curtailedScience = this.state.fetchedArrayScience.slice(\n      0,\n      this.state.scienceQ\n    );\n    const curtailedMath = this.state.fetchedArrayMath.slice(\n      0,\n      this.state.mathQ\n    );\n    const curtailQuestions = [];\n    curtailQuestions.push(\n      curtailedGK, //index 0\n      curtailedScience, //index 1\n      curtailedMath //index 2\n    );\n    const curtailedQuestionTogether = []; // No unecessary indices\n    curtailedGK.forEach((element) => curtailedQuestionTogether.push(element));\n    curtailedScience.forEach((element) =>\n      curtailedQuestionTogether.push(element)\n    );\n    curtailedMath.forEach((element) => curtailedQuestionTogether.push(element));\n    const scrambledCurtailedSelection = [];\n    scrambledCurtailedSelection.push(\n      curtailedQuestionTogether[2],\n      curtailedQuestionTogether[0],\n      curtailedQuestionTogether[3],\n      curtailedQuestionTogether[1],\n      curtailedQuestionTogether[4]\n    );\n    const questionsArray = []\n    //for (let i=0; i<scrambledCurtailedSelection.length; i++){\n    //questionsArray.push(scrambledCurtailedSelection[i].question)}\n    questionsArray.push(scrambledCurtailedSelection[0].question,\n      scrambledCurtailedSelection[1].question,\n      scrambledCurtailedSelection[2].question,\n      scrambledCurtailedSelection[3].question,\n      scrambledCurtailedSelection[4].question,\n      )\n\n    this.setState((prevState) => ({\n      ...prevState,\n      generalQItems: [...this.state.generalQItems, ...curtailQuestions[0]],\n      scienceQItems: [...this.state.scienceQItems, ...curtailQuestions[1]],\n      mathQItems: [...this.state.mathQItems, ...curtailQuestions[2]],\n      combinedSelection: [...scrambledCurtailedSelection],\n      arrayOfQuestions: questionsArray\n    }));\n  };\n\n  isItCorrect = (event, prevState) => {\n    if (event.target.innerText === this.state.combinedSelection[this.state.currentItemIndex].correct_answer) {\n        this.setState((prevState) => ({\n          ...this.state,\n          currentItemIndex: prevState.currentItemIndex + 1,\n          itemsCorrect: prevState.itemsCorrect + 1\n        }))\n      }\n      else {\n        this.setState((prevState) => ({\n          ...this.state,\n          itemsIncorrect: prevState.itemsIncorrect + 1,\n          currentItemIndex: prevState.currentItemIndex + 1\n        }))\n      }\n  };\n\n  render() {\n    return (\n      <div>\n        <h1 className ={styles.bigblue}>Quick True/False Trivia (Total of 5 Questions Max.)</h1>\n        <form onSubmit={(event) => this.handleSubmit(event)} className ={styles.formstyle}>\n            <span>General Q:</span>\n            <input\n              type=\"text\"\n              onChange={(event) => this.handleGeneralChange(event)}\n              value={this.state.generalQ}\n            />\n            <span>Science Q:</span>\n            <input\n              type=\"text\"\n              onChange={(event) => this.handleScienceChange(event)}\n              value={this.state.scienceQ}\n            />\n            <span>Math Q:</span>\n            <input\n              type=\"text\"\n              onChange={(event) => this.handleMathChange(event)}\n              value={this.state.mathQ}\n            />\n            <input type=\"submit\" />\n          </form>\n  <br />\n        <button onClick={this.testingSplicingStates}>\n          Display Chosen Items\n        </button>\n        <RenderAllQA arrayOfQuestions = {this.state.arrayOfQuestions} currentItemIndex = {this.state.currentItemIndex} combinedSelection = {this.state.combinedSelection} isItCorrect = {this.isItCorrect} />\n\n        <div>\n          <div>Correct Answer Attempts: {this.state.itemsCorrect}</div>\n          <div>Incorrect Answer Attempts: {this.state.itemsIncorrect}</div>\n        </div>\n        <QuizSolutions currentItemIndex = {this.state.currentItemIndex} combinedSelection ={this.state.combinedSelection}/>\n\n      </div>\n    );\n  }\n}","import { useState, useContext } from \"react\";\nimport {FavoritesContext} from './contexts/FavoritesContext'\n\nconst FavoritesPage = (props) => {\n    //const [newlyLiked, setNewlyLiked] = setState([])\n    const [favorites, setFavorites] = useContext(FavoritesContext)\n  \n    favorites.forEach((fav) =>\n    console.log(`Item: ${fav}`))\n\n    const renderFav = () => { return(\n      favorites.forEach((fav) => <h1>{fav}</h1>))\n    }\n\n    const removeFromFavorites = () => {\n      \n    }\n    return (\n    \n      <div>\n        <br />\n        <br />\n        <div>{favorites[0]}</div>\n        <br />\n        <div>{favorites[1]}</div>\n        <br />\n        <div>{favorites[2]}</div>\n        <br />\n        <div>{favorites[3]}</div>\n        <br />\n        <div>{favorites[4]}</div>\n        <br />\n        <div>{favorites[5]}</div>\n        <br />\n        <div>{favorites[6]}</div>\n        <br />\n        <div>{favorites[7]}</div>\n        <br />\n        <div>{favorites[8]}</div>\n        <br />\n        <div>{favorites[9]}</div>\n        <br />\n        <div>{favorites[10]}</div>\n        <br />\n        <div>{favorites[11]}</div>\n        {renderFav()}\n      </div>\n    )\n  }\n  \nexport default FavoritesPage\n\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport App from \"./App\";\nimport FavoritesPage from \"./FavoritesPage.js\";\n//import { FavouritesContextProvider } from './contexts/FavouritesContext'\nimport Navbar from \"./Navbar.js\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport { FavoritesProvider } from \"./contexts/FavoritesContext\";\n\nReactDOM.render(\n  <FavoritesProvider>\n    <Router>\n      <div>\n        <Navbar />\n        <Route\n          exact\n          path=\"/\"\n          render={() => (\n            <div>\n              <br />\n              <h1>About</h1>\n              <h2>\n                {\" \"}\n                Welcome to this quiz! This is a simple true/false trivia game\n                built with React that consists of 5 questions. You can pick\n                whatever combination of General Knowledge, Math, and Science\n                questions you want.\n              </h2>\n              <div>\n                {\" \"}\n                <iframe\n                  src=\"https://giphy.com/embed/KBFE5J0I8SLbKL7FlT\"\n                  width=\"480\"\n                  height=\"480\"\n                  frameBorder=\"0\"\n                  class=\"giphy-embed\"\n                  allowFullScreen\n                ></iframe>\n                <p>\n                  <a href=\"https://giphy.com/gifs/question-quiz-mark-KBFE5J0I8SLbKL7FlT\">\n                    via GIPHY\n                  </a>\n                </p>{\" \"}\n              </div>\n            </div>\n          )}\n        />\n        <Route exact path=\"/playnow\" component={App} />\n        <Route exact path=\"/favorites\" component={FavoritesPage} />\n        {/*         <FavouritesContextProvider>\n        <App />\n      </FavouritesContextProvider> */}\n      </div>\n    </Router>\n  </FavoritesProvider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}